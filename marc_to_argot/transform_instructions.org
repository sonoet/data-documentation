* ID
Thrown in late to provide a way to refer to specific transforms in notes
* Argot Target
Argot element the transformation will produce. I made up some new ones. Working on this highlighted some discussions we may need to have about best way to handle some things in Argot, mainly around search fields vs. display fields, which in many cases need to contain different values. 
* MARC tag
 - . : applies to field with any MARC tag (used for patterns applied to certain subfield values). 
 - ![1768]11 - applies to any field except regex-y pattern (if a subfield is used the same across all fields except a handful -- example: $e in the X11 fields) -- not used in examples but potentially applicable
* Ind 1
 - . : applies to fields with any Ind 1 value
 - 0 : applies only to field with Ind 1 = 0
 - !0 : applies to fields with any Ind 1 value EXCEPT 0
* Ind 2
Same conventions as Ind 1
* FieldConstraint
Defines subfields that must be (or not be) present, or values that certain subfields must have for the rule to apply. Below are examples of how to read conventions I used in the examples: 

 - 4=drt || e=director : field must have $4 containing "drt" OR $e containing "director"
 - e : field must contain a $e
 - !t : field must NOT contain a $t
 - s||t : field must contain a $s OR $t
* Subfield
Which subfields are to be extracted/operated on by the rule

Subfields in () have specific/weird handling (not covered by separate pattern rules)
* Type
 - Pattern : instructions for handling a subfield that apply regardless of what MARC field it occurs in (reusable instructions for certain subfields)
 - Subfield-to-property : Each mapped subfield in field produces a separate value in multi-value target element hash
 - Field-to-property : Each field produces one value for target element 
 - Subfield-instance-to-property : A value is produced for each instance of the given subfield in the field, typically re-using the rest of the field 

* Instructions
Shorthand that I tried to keep consistent that hopefully makes sense to anyone but me.

Hopefully the input/output examples help clarify.

Some instructions refer to maps, which are at [[https://github.com/trln/data-documentation/tree/master/marc_to_argot/maps]]

* Input
The complete MARC field, in Millennium human-readable MARC dialect. 

Each field in "" 

Multiple example fields separated by , 

* Output
The resulting output of the transformation. 

Where one input field would produce multiple elements as output, the elements are like ["a", "b", "c"]

Where one input field would produce one element (or none), the output is just in quotes. 

Output values/arrays of them separated by ,

* Notes
